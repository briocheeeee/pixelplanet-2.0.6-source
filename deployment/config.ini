#==============================================================================#
#                                                                              #
#    ##      ==      @@                                                        #
#  ######  ======  @@@@@@                         ___                          #
#  ######%%======**@@@@@@        .-----.-----.  .'  _.--.--.-----.             #
#   ####%%%%+==+****%@@@          |  _  |  _  |__|   _|  |  |     |            #
#     %%%%%%%%********            |   __|   __|__|__| |_____|__|__|            #
#   ----%%%%%%%%****----          |__|  |__|                                   #
#- -------%%%%%%%%--------                                                     #
#   ----++++%%%%++++----     pixelplanet - collaborative online canvas         #
#     ++++++++++++++++       Copyright (C) 2020, 2024 hf <hf@pixelplanet.fun>  #
#   ----++++====+++++***                                                       #
#  ------++======++******    License: GNU Affero General Public License 3+     #
#  ------  ======  ******                                                      #
#    --      ==      **                                                        #
#                                                                              #
#==============================================================================#

# Lines starting with # are comments and get ignored. many options are
# commented out, to show you that exist. Uncomment them if you need them.
# Changes in the config require a restart of pixelplanet to take effect.

# The port and host under which pixelplanet runs,
# this is not neccessarily the public host (and should not be, since you should
# use a reverse proxy like nginx)
PORT = 5000
HOST = localhost

# redis
# redis is used to store canvas data and pixelcoutns of users
# REDIS_URL can either be a redis://... URL or a path to a UNIX socket
REDIS_URL = redis://localhost:6379

# MySQL / MariaDB
# mysql is used for sessions, userdata, etc.
# make sure you have such a user with password and databasecreated
MYSQL_HOST = localhost
MYSQL_USER = pixelplanet
MYSQL_PW = sqlpassword
MYSQL_DATABASE = pixelplanet

# ProxyCheck
# detecting proxies and VPNs with https://proxycheck.io , you need an account
# there to get a key
USE_PROXYCHECK = no
#PROXYCHECK_KEY = xxx-xxxx-xxxx-xxx-xxx

# How long we cache proxycheck data in hours
PROXYCHECK_DURATION = 72
# How long we cache whois data (country, organisation, cidr of an IP) in hours
WHOIS_DURATION = 240
# Outpoing IP to use for whois requests, in case you have multiple
#OUTGOING_ADDRESS = xxx.xxx.xxx.xxx
# Command that gets launched when an IP gets rate limited, with the IP
# as its firt argument (useful for temporary blocking via firewall or CDN)
#RATE_LIMIT_CMD = sudo /usr/local/bin/tempblock

# IDs of users with Admin rights
# You can get the user Id in the Help menu ingame
ADMIN_IDS = 1, 2

# A key that can be used for special admin APIs that are needed for matrix
# bridge and possible other clients
#APISOCKET_KEY = somerandomstring

# Take client IP from the X-Real-Ip header, which should be set by reverse proxy
# like nginx.
# Make sure that nginx also sets X-Forwarded-Host, X-Forwarded-Port and
# X-Forwarded-Proto
USE_XREALIP = no

# pixelplanet can run in multiple processes as a cluster,
# the different processes will then use redis to communicate with each other.
# If you turn IS_CLUSTER on, this will be enabled (see doc/DEPLOYMENT.md).
IS_CLUSTER = no

# ============================== Gameplay =====================================#

# Fishing makes random fishes appear on screen of random users at random
# intervals. They can catch them by clicking on them and will receive a
# temporary cooldown bonus, based on the weight of the fish
FISHING = no
# Amount of fishes to spawn simultaniously, the next fishes will spawn when less
# than this many users have fish-bonus cooldown
FISH_AMOUNT = 3

# Hourly Event aka void
# An ever increasing blob of random colors appears somewhere on the first canvas
# and uses have to place against it. If they defeat it, the whole game will have
# temporary lower cooldown
HOURLY_EVENT = no

# Punish dominating countries temporarily, by increasing their cooldown.
# This helps against streamer raids
PUNISH_DOMINATOR = no

# =============================== Captchas ====================================#

# intervals of captchas in minutes
CAPTCHA_TIME = 30
# how long the user has time to solve a captcha, before it expires in seconds
CAPTCHA_TIMEOUT = 120
# how long an IP is marked as trusted (after solving a JS challenge) in hours
TRUSTED_TIME = 48

# ================================ E-Mail =====================================#

# pixelplanet can use the sendmail command to send verification and password
# forgotten emails.
# If you can't be bothered to setup a mail server, you can use SSMTP to forward
# to gmail, or wherever. https://wiki.archlinux.org/title/SSMTP

# set to yes to enable sending mails
USE_MAILER = no

# the email adress that gets used for sending outgoing mails
MAIL_ADDRESS = donotreply@example.com

# ================================ Paths ======================================#

# to run pixelplanet within a path, like http://example.com/ppfun/, set this to
# e.g. /ppfun
# Shall NOT end with "/", but shall start with "/"

#BASENAME = /ppfun

# to run APIs under a different URL, set API_URLs here. This can be multiple
# comma seperated URLs, in which case the game will load balance between them
# Shall NOT end with "/"

#API_URLs = https://sca.pixelplanet.fun, https://scb.pixelplanet.fun

# to serve assets (and only assets) via a CDN, this CDN_URL can be set,
# pixelplanet will not allow access APIs on that URL, to protect the users
# from cloudflares MitM attack.
# If you want to run the whole game behind a CDN, you should not set this,
# this option is only useful if you want to serve the bandwidth intensive
# requests on a CDN, and nothing else
# Shall NOT end with "/"

#CDN_URL = https://cdn.pixelplanet.fun

# Two letter country codes for countries that can access the game without CDN,
# this is useful in case of blocks against a CDN.
# The country needs to have a translation available, associated to its country
# code.
# It will be checked on the client if the CDN is available and the CDN will be
# used if it is.

#NO_CDN_COUNTRIES = cn,gr

# Requests on this host will not load balance API_URLs, this is only useful
# if you run a seperate second domain that you don't want to share connections
# with the other.
# This option is ignored at best, barely useful
# Shall not include protocol (e.g. "http://")

#UNSHARDED_HOST = fuckyouarkeros.fun

# Hosts that we allow API access from. If you are using multiple domains, this
# should be set to all of them. Allows all subdomains by default.
# Accepts multiple hosts comma seperated
# Shall start with a '.'
# Shall not include protocol (e.g. "http://")

#CORS_HOSTS = localhost:5000

# ======================= Socials / Third Party Logins ========================#

# Contact email address for people to complain to

CONTACT_ADDRESS = admin@example.com

# Invite to your discord / guilded server
GUILDED_INVITE = https://discord.gg/yv9bQpu5Y8

# Oauth keys for third party logins, you need developer accounts on those
# platforms to get an id and key

FACEBOOK_APP_ID = dummy
FACEBOOK_APP_SECRET = dummy
DISCORD_CLIENT_ID = dummy
DISCORD_CLIENT_SECRET = dummy
GOOGLE_CLIENT_ID = dummy
GOOGLE_CLIENT_SECRET = dummy
VK_CLIENT_ID = dummy
VK_CLIENT_SECRET = dummy
REDDIT_CLIENT_ID = dummy
REDDIT_CLIENT_SECRE = dummy

# ========================= Backup / Historical View ==========================#

# Settings for the backup script that creates full canvas backups daily in the
# form of PNG tile files and incremential backups all BACKUP_INTERVAL minutes
# that saves PNG tiles with the differences since the last full daily backup.
# This is also used for the historical view.

# The backup script requires a second running redis instance, which it uses to
# compare to the current state.
# The BACKUP_REDIS_URL instance WILL GET WIPED once per day, so make sure
# that this is correct! It is NOT THE GAME REDIS.

#BACKUP_REDIS_URL = redis://localhost:6380

# Directory where the backup tiles get saved

#BACKUP_DIR = /tmp/backup

# Interval in minutes on when to create incremental backups

#BACKUP_INTERVAL = 30

# Command that gets executed after each backup completed. Useful for syncing
# scripts.

#BACKUP_CMD = /home/.../rsync.sh

# The url, where the backup files are available. If this is set, historical view
# will get enabled. It has to point to a URL that serves the BACKUP_DIR.
# You have to setup nginx to serve it and need "autoindex" to be on, because
# parsing the index is how pixelplanet finds the available times.
#BACKUP_URL = https://storage.example.om
